initSidebarItems({"mod":[["bitenc","A fixed-width bit encoding implementation. This allows to store a sequence of values over a reduced alphabet by packing them bit-encoded into a sequence of bytes."],["bwt","The Burrows-Wheeler-Transform and related data structures. The implementation is based on the lecture notes \"Algorithmen auf Sequenzen\", Kopczynski, Marschall, Martin and Rahmann, 2008 - 2015."],["fmindex","FM-Index and FMD-Index for finding suffix array intervals matching a given pattern in linear time."],["qgram_index","A classical, flexible, q-gram index implementation."],["rank_select","Rank/Select data structure based on Gonzalez, Grabowski, MÃ¤kinen, Navarro (2005). This implementation uses only a single level of blocks, and performs well for large n."],["smallints","A data structure for a sequence of small integers with a few big integers. Small ints are stored in type S (e.g. a byte), big ints are stored separately (in type B) in a BTree. The implementation provides vector-like operations on the data structure (e.g. retrieve a position, add an integer, etc.)."],["suffix_array","Suffix arrays and related algorithms. The implementation is based on the lecture notes \"Algorithmen auf Sequenzen\", Kopczynski, Marschall, Martin and Rahmann, 2008 - 2015."]]});